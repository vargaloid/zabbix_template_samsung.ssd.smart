---
################### 
# install software
- shell: dpkg-query -l 'zabbix-agent'
  ignore_errors: yes
  when: ansible_os_family == "Debian"

- apt_key:
    url: https://hwraid.le-vert.net/debian/hwraid.le-vert.net.gpg.key
    state: present
  when: ansible_os_family == "Debian"

- apt_repository:
    repo: deb http://hwraid.le-vert.net/debian {{ ansible_distribution_release }} main
    state: present
  when: ansible_os_family == "Debian"

- name: Update apt cache
  apt: update_cache=yes
  when: ansible_os_family == "Debian"

- name: Install required packages debian8
  apt: name={{ item }}
  with_items:
    - bc
    - megacli
    - smartmontools
  when: ansible_os_family == "Debian"

- name: install required packages centos7
  yum: name={{ item }}
  with_items:
    - bc
    - smartmontools
  when: ansible_os_family == "RedHat"

- name: check megacli
  stat:
    path: /usr/bin/megacli
  register: sym
  when: ansible_os_family == "RedHat"

- name: download and install megacli for centos
  copy:
    src="/home/varg/ansible/roles/disk.presence/templates/MegaCli-8.07.10-1.noarch.rpm"
    dest="/tmp/MegaCli-8.07.10-1.noarch.rpm"
  when: ansible_os_family == "RedHat" and  sym.stat.islnk is not defined

- name: install megacli centOS rpm file
  yum: name=/tmp/MegaCli-8.07.10-1.noarch.rpm
  when: ansible_os_family == "RedHat" and sym.stat.islnk is not defined

- name: copy megacli to /usr/bin/megacli for centos7
  command: ln -s /opt/MegaRAID/MegaCli/MegaCli64 /usr/bin/megacli
  when: ansible_os_family == "RedHat" and sym.stat.islnk is not defined

# create a directory if it doesn't exist 
- file:
    path: /etc/zabbix/scripts
    state: directory
    owner: zabbix
    group: zabbix
    mode: 0755

- name: Installing sams.smart.ssd.sh
  copy: 
    src="/home/varg/ansible/roles/samsung.ssd.smart/templates/sams.smart.ssd.sh" 
    dest="/etc/zabbix/scripts/sams.smart.ssd.sh" 
    owner="zabbix" 
    group="zabbix"   
    mode=755

- name: Updating sudoers
  lineinfile:
    dest: /etc/sudoers
    state: present
    line: 'zabbix ALL=NOPASSWD: /etc/zabbix/scripts/sams.smart.ssd.sh'
    validate: '/usr/sbin/visudo -cf %s'

- name: Updating zabbix_agentd.conf
  lineinfile:
    dest: /etc/zabbix/zabbix_agentd.conf
    line: "UserParameter=smartd.value[*],cat /tmp/z.sams.ssd.smart.items.txt | grep $1 | grep $2 | awk '{print $ 3+0}' "

- name: Checking zabbix
  service: name=zabbix-agent enabled=yes state=restarted
